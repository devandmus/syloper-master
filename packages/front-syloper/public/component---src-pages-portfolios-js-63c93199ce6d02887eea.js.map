{"version":3,"file":"component---src-pages-portfolios-js-63c93199ce6d02887eea.js","mappings":"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","sources":["webpack://syloper-front/./node_modules/classnames/index.js","webpack://syloper-front/./src/components/Home/Portfolios/Table/styles/index.js","webpack://syloper-front/./src/components/Home/Portfolios/Charts/styles/index.js","webpack://syloper-front/./src/components/Home/Portfolios/Charts/index.js","webpack://syloper-front/./src/components/Home/Portfolios/styles/index.js","webpack://syloper-front/./src/components/Home/Portfolios/Table/index.js","webpack://syloper-front/./src/components/Home/Portfolios/index.js","webpack://syloper-front/./src/pages/portfolios.js","webpack://syloper-front/./src/utils/number.js"],"sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg)) {\n        if (arg.length) {\n          var inner = classNames.apply(null, arg);\n\n          if (inner) {\n            classes.push(inner);\n          }\n        }\n      } else if (argType === 'object') {\n        if (arg.toString === Object.prototype.toString) {\n          for (var key in arg) {\n            if (hasOwn.call(arg, key) && arg[key]) {\n              classes.push(key);\n            }\n          }\n        } else {\n          classes.push(arg.toString());\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","import styled from 'styled-components';\n\nconst TableBody = styled.table`\n  width: 100%;\n  background-color: #fff;\n  text-align: center;\n  border-radius: 15px;\n  margin-top: 20px;\n  overflow-x: scroll;\n\n  tr {\n    text-align: center;\n    border-bottom: 1px solid;\n    border-color: ${({ theme }) => theme.color.border};\n    &:last-child {\n      border: none;\n    }\n  }\n\n  th {\n    font-size: 1.2rem;\n    font-weight: 500;\n    padding: 21px 10px;\n\n    @media only screen and (max-width: 1000px) {\n      font-size: 1.05rem;\n    }\n  }\n\n  td {\n    text-align: center;\n    width: 200px;\n    padding: 18px 8px;\n    font-size: 1.02rem;\n    img {\n      height: 48px;\n      border-radius: 24px;\n    }\n\n    @media only screen and (max-width: 1000px) {\n      font-size: 1rem;\n    }\n  }\n`;\n\nexport default TableBody;\n","import styled from 'styled-components';\n\nconst ChartContainer = styled.section`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  flex-flow: wrap;\n`;\n\nconst ChartModule = styled.div`\n  background-color: #fff;\n  padding: 25px;\n  box-sizing: border-box;\n  width: 32%;\n  border-radius: 20px;\n  margin-bottom: 20px;\n\n  @media only screen and (max-width: 1250px) {\n    width: 48%;\n  }\n\n  @media only screen and (max-width: 1000px) {\n    width: 700px;\n    margin: 0 auto 20px;\n  }\n\n  @media only screen and (max-width: 768px) {\n    width: 95%;\n  }\n\n  h2 {\n    width: 100%;\n    font-size: 1.35rem;\n    font-weight: 500;\n    margin-bottom: 20px;\n\n    @media only screen and (max-width: 1000px) {\n        font-size: 1.27rem;\n    }\n  }\n`;\n\nexport { ChartContainer, ChartModule };\n","import React from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  BarElement,\n} from 'chart.js';\nimport { Line, Bar } from 'react-chartjs-2';\nimport faker from '@faker-js/faker';\nimport { ChartContainer, ChartModule } from './styles';\n\nconst Charts = () => {\n  ChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n    BarElement\n  );\n\n  const labels = ['January', 'February', 'March', 'April'];\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: 'Hours',\n        data: labels.map(() => faker.datatype.number({ min: 0, max: 1000 })),\n        borderColor: '#34AD66',\n        backgroundColor: '#2a8750',\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'bottom',\n      },\n    },\n  };\n\n  return (\n    <ChartContainer>\n      <ChartModule>\n        <h2>Portfolio Balance</h2>\n        <Line options={options} data={data} />\n      </ChartModule>\n      <ChartModule>\n        <h2>Worked Hours</h2>\n        <Bar options={options} data={data} />\n      </ChartModule>\n      <ChartModule>\n        <h2>Estimated Hours</h2>\n        <Line options={options} data={data} />\n      </ChartModule>\n    </ChartContainer>\n  );\n};\n\nexport default Charts;\n","import styled from 'styled-components';\n\nconst PortfoliosMain = styled.article`\n  width: 100%;\n  height: calc(100% - 100px);\n  overflow-x: hidden;\n`;\n\nexport { PortfoliosMain };\n","import React, { useEffect, useState } from 'react';\nimport TableBody from './styles';\nimport ServiceBFF from '../../../../services/BFF';\nimport { numberFormatter, currencyFormatter } from '../../../../utils/number';\nimport { EditText } from 'react-edit-text';\nconst Table = () => {\n  const [tableData, setTableDta] = useState();\n\n  useEffect(() => {\n    ServiceBFF.getPortfolio().then((data) => setTableDta(data));\n  }, []);\n\n  return (\n    <TableBody>\n      <tr>\n        <th>Project</th>\n        <th>Client</th>\n        <th>Price per Hour</th>\n        <th>Estimated Hours</th>\n        <th>Worked Hours</th>\n        <th>Estimated Incomes</th>\n        <th>Real Incomes</th>\n      </tr>\n      {tableData?.map((row) => (\n        <tr>\n          <td>{row.project_title}</td>\n          <td>{row.client}</td>\n          <td>{row.price_per_hour}</td>\n          <td>{numberFormatter(row.estimated_hours)}</td>\n          <td>\n            <EditText \n              type=\"number\"\n            />\n          </td>\n          <td>{currencyFormatter(row.estimated_incomes)}</td>\n          <td>{currencyFormatter(row.real_incomes)}</td>\n        </tr>\n      ))}\n    </TableBody>\n  );\n};\n\nexport default Table;\n","import React from 'react';\nimport Home from '../Home';\nimport Charts from './Charts';\nimport { PortfoliosMain } from './styles';\nimport Table from './Table';\n\nconst Portfolios = () => {\n  return (\n    <Home title=\"Portfolios\">\n      <PortfoliosMain>\n        <Charts />\n        <Table />\n      </PortfoliosMain>\n    </Home>\n  );\n};\n\nexport default Portfolios;\n","import React from 'react';\nimport Portfolios from '../components/Home/Portfolios';\n\nconst PortfoliosPage = () => <Portfolios />;\n\nexport default PortfoliosPage;\n","// eslint-disable-next-line import/prefer-default-export\nexport function currencyFormatter(value) {\n  const dollarUS = Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n  });\n\n  return dollarUS.format(value);\n}\n\nexport function numberFormatter(value) {\n  return new Intl.NumberFormat('en-US').format(value);\n}\n"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","TableBody","styled","theme","color","border","ChartContainer","ChartModule","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","BarElement","labels","data","datasets","label","map","faker","min","max","borderColor","backgroundColor","options","responsive","plugins","legend","position","PortfoliosMain","useState","tableData","setTableDta","useEffect","ServiceBFF","then","row","project_title","client","price_per_hour","numberFormatter","estimated_hours","type","currencyFormatter","estimated_incomes","real_incomes","Home","title","value","Intl","NumberFormat","style","currency","format"],"sourceRoot":""}