{"version":3,"file":"component---src-pages-home-js-4c93fca4609d7938e7a2.js","mappings":"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","sources":["webpack://syloper-front/./src/components/UI/avatar/index.js","webpack://syloper-front/./src/components/UI/avatar/styles/index.js","webpack://syloper-front/./src/components/Home/Dashboard/DCharts/BalanceChart/styles/index.js","webpack://syloper-front/./src/components/Home/Dashboard/DCharts/BalanceChart/index.js","webpack://syloper-front/./src/components/Home/Dashboard/DCharts/FirstCharts/styles/index.js","webpack://syloper-front/./src/components/Home/Dashboard/DCharts/FirstCharts/index.js","webpack://syloper-front/./src/components/Home/Dashboard/DCharts/styles/index.js","webpack://syloper-front/./src/components/Home/Dashboard/DCharts/index.js","webpack://syloper-front/./src/components/Home/Dashboard/EmployeeRanking/styles/index.js","webpack://syloper-front/./src/components/Home/Dashboard/EmployeeRanking/index.js","webpack://syloper-front/./src/components/Home/Dashboard/styles/index.js","webpack://syloper-front/./src/components/Home/Dashboard/index.js","webpack://syloper-front/./src/pages/home.js","webpack://syloper-front/./src/services/ServicesTasks.js"],"sourcesContent":["import React from 'react';\nimport { AssignImg, AvatarStyled } from './styles';\n\nconst Avatar = ({ responsible, name, i, translatex }) => {\n  return (\n    <AvatarStyled translatex={translatex} key={i}>\n      <AssignImg\n        src={responsible && responsible.avatar}\n        alt={responsible.name}\n      />\n    </AvatarStyled>\n  );\n};\n\nexport default Avatar;\n","import styled from 'styled-components';\n\nconst AssignImg = styled.span`\n  width: 45px;\n  height: 45px;\n  alt: ${(props) => props.alt}};\n  ${({ src }) =>\n    src ? `background-image: url(${src});` : 'background-color: gray;'}\n  background-size: cover;\n  border: 1px solid #fff;\n  border-radius: 50%;\n  display: block;\n`;\n\nconst AvatarStyled = styled.div`\n  width: 45px;\n  height: 45px;\n  display: inline-block;\n  transform: ${(props) => `translateX(${props.translatex}px)`};\n  background-color: gray;\n  border: 1px solid #fff;\n  border-radius: 50%;\n`;\n\nconst DisplayName = styled.span`\n  width: 100%;\n  font-weight: 300;\n  font-size: 1.08rem;\n  line-height: 1.35;\n`;\n\nconst AvatarGroup = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport { AssignImg, AvatarStyled, DisplayName, AvatarGroup };\n","import styled from 'styled-components';\n\nconst BalanceContainer = styled.section`\n  width: 100%;\n  background-color: #fff;\n  border-radius: 20px;\n  padding: 20px;\n  box-sizing: border-box;\n\n  h3 {\n    width: 100%;\n    font-size: 1.25rem;\n    font-weight: 600;\n    margin-bottom: 20px;\n  }\n\n  .chart {\n    width: 80%;\n\n    @media screen and (max-width: 760px) {\n      width: 100%;\n    }\n  }\n`;\n\nexport { BalanceContainer };\n","import React from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  BarElement,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport faker from '@faker-js/faker';\nimport { BalanceContainer } from './styles';\n\nconst BalanceChart = () => {\n  ChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n    BarElement\n  );\n\n  const labels = ['January', 'February', 'March', 'April'];\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: 'Hours',\n        data: labels.map(() => faker.datatype.number({ min: 0, max: 1000 })),\n        borderColor: '#34AD66',\n        backgroundColor: '#2a8750',\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'bottom',\n      },\n    },\n  };\n\n  return (\n    <BalanceContainer>\n      <h3>Portfolio Balance</h3>\n      <section className=\"chart\">\n        <Line options={options} data={data} />\n      </section>\n    </BalanceContainer>\n  );\n};\n\nexport default BalanceChart;\n","import styled from 'styled-components';\n\nconst FirstContainer = styled.article`\n  width: 100%;\n  display: flex;\n  gap: 20px;\n  margin-bottom: 20px;\n\n  @media screen and (max-width: 760px) {\n    flex-direction: column;\n  }\n`;\n\nconst FChartsContainer = styled.div`\n  width: 45%;\n  background-color: #fff;\n  border-radius: 20px;\n  padding: 20px;\n  box-shadow: ${(props) => props.theme.boxShadoxC};\n\n  @media screen and (max-width: 760px) {\n    box-sizing: border-box;\n    width: 100%;\n  }\n\n  h3 {\n    width: 100%;\n    font-size: 1.25rem;\n    font-weight: 600;\n    margin-bottom: 20px;\n  }\n`;\n\nconst FChartsInfo = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n\n  .chart {\n    width: 150px;\n  }\n\n  @media screen and (max-width: 500px) {\n    flex-direction: column;\n    align-items: center;\n    gap: 20px;\n  }\n`;\n\nconst FChartsData = styled.div`\n  flex-basis: 55%;\n  display: flex;\n  align-items: center;\n  align-content: center;\n\n  .data-container {\n    width: 100%;\n  }\n\n  div {\n    width: 100%;\n    margin-bottom: 15px;\n    display: flex;\n    justify-content: space-between;\n    font-size: 1.05rem;\n\n    &:last-child {\n      margin: 0;\n    }\n\n    span {\n      font-weight: 500;\n      @media screen and (max-width: 500px) {\n        margin-right: 13px;\n      }\n\n      &.status-0 {\n        color: ${(props) => props.theme.color.chartOrange};\n      }\n\n      &.status-1 {\n        color: ${(props) => props.theme.color.chartYellow};\n      }\n\n      &.status-2 {\n        color: ${(props) => props.theme.color.chartGreen};\n      }\n    }\n  }\n`;\n\nexport { FirstContainer, FChartsContainer, FChartsInfo, FChartsData };\n","import * as React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { useTheme } from 'styled-components';\nimport {\n  FChartsContainer,\n  FChartsData,\n  FChartsInfo,\n  FirstContainer,\n} from './styles';\nimport ServicesBff from '../../../../../services/BFF';\nimport ServicesTasks from '../../../../../services/ServicesTasks';\n\nconst FirstCharts = () => {\n  const theme = useTheme();\n  const [userDashboard, setUserDashboard] = React.useState([]);\n  const [tasks, setTasks] = React.useState([]);\n  ChartJS.register(ArcElement, Tooltip, Legend);\n\n  const backgroundColorChart = [\n    `${theme.color.chartOrange}`,\n    `${theme.color.chartYellow}`,\n    `${theme.color.chartGreen}`,\n  ];\n\n  React.useEffect(() => {\n    // ServicesBff.getProject().then((data) => setProject(data));\n    ServicesBff.getUserDashboard().then((data) => {\n      const array = [];\n      Object.keys(data.globalStatus).map((key) => {\n        if (key !== 'total_projects') {\n          array.push(data.globalStatus[key]);\n        }\n      });\n      setUserDashboard(array);\n    });\n\n    ServicesTasks.getTasks().then((data) => {\n      const totalTasks = data.reduce((acc, task) => ({\n        ...acc,\n        [setTaskStatusName(task.status.toString())]: (acc[task.status] || 0) + 1,\n      }), {})\n\n      setTasks(totalTasks);\n    });\n  }, []);\n\n  const Labels = () => {\n    const name = ['Ready to Start', 'In Progress', 'Completed'];\n\n    return (\n      <>\n        {name.map((status, i) => (\n          <div>\n            <span>{status}</span>\n            <span className={`status-${i}`}>{userDashboard[i]}</span>\n          </div>\n        ))}\n      </>\n    );\n  };\n\n  const setTaskStatusName = (name) => {\n    switch (name) {\n      case '0':\n        return 'ready';\n      case '1':\n        return 'inProgress';\n      case '2':\n        return 'completed';\n      default:\n        break;\n    }\n  };\n\n  const tasksDataValues = Object.values(tasks);\n\n  const dataProjects = {\n    datasets: [\n      {\n        label: '',\n        data: userDashboard,\n        backgroundColor: backgroundColorChart,\n      },\n    ],\n  };\n\n  const dataTasks = {\n    datasets: [\n      {\n        label: '',\n        data: tasksDataValues,\n        backgroundColor: backgroundColorChart,\n      },\n    ],\n  };\n\n  return (\n    <FirstContainer>\n      <FChartsContainer>\n        <h3>Projects</h3>\n        <FChartsInfo>\n          <section className=\"chart\">\n            <Doughnut data={dataProjects} />\n          </section>\n          <FChartsData>\n            <section className=\"data-container\">\n              <Labels />\n            </section>\n          </FChartsData>\n        </FChartsInfo>\n      </FChartsContainer>\n\n      <FChartsContainer>\n        <h3>Total Tasks</h3>\n        <FChartsInfo>\n          <section className=\"chart\">\n            <Doughnut data={dataTasks} />\n          </section>\n          <FChartsData>\n            <section className=\"data-container\">\n              <div>\n                <span>Ready to Start</span>\n                <span className=\"status-a\">{tasks?.ready}</span>\n              </div>\n              <div>\n                <span>In Progress</span>\n                <span className=\"status-b\">{tasks?.inProgress}</span>\n              </div>\n              <div>\n                <span>Completed</span>\n                <span className=\"status-c\">{tasks?.completed}</span>\n              </div>\n            </section>\n          </FChartsData>\n        </FChartsInfo>\n      </FChartsContainer>\n    </FirstContainer>\n  );\n};\n\nexport default FirstCharts;\n","import styled from 'styled-components';\n\nconst DChartsContainer = styled.section`\n  flex-basis: 67%;\n`;\n\nexport { DChartsContainer };\n","import * as React from 'react';\nimport BalanceChart from './BalanceChart';\nimport FirstCharts from './FirstCharts';\nimport { DChartsContainer } from './styles';\n\nconst Dcharts = () => {\n  return (\n    <DChartsContainer>\n      <FirstCharts />\n      <BalanceChart />\n    </DChartsContainer>\n  );\n};\n\nexport default Dcharts;\n","import styled from 'styled-components';\n\nconst EmployeeContainer = styled.section`\n  flex-basis: 32%;\n  border-radius: 20px;\n  background-color: #fff;\n  padding: 20px;\n  box-sizing: border-box;\n`;\n\nconst EmployeeTitle = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n\n  h3 {\n    font-size: 1.25rem;\n    font-weight: 600;\n  }\n\n  span {\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n    background-color: ${(props) => props.theme.color.primaryGreen};\n    color: #fff;\n    display: flex;\n    font-weight: 700;\n    align-content: center;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nconst Employee = styled.div`\n  width: 100%;\n  padding: 18px 25px;\n  box-sizing: border-box;\n  border-radius: 20px;\n  box-shadow: ${(props) => props.theme.boxShadowC};\n  margin-bottom: 15px;\n\n  h4 {\n    width: 100%;\n    font-size: 1.05rem;\n    font-weight: 600;\n    margin-bottom: 15px;\n  }\n\n  p {\n    width: 100%;\n    font-size: 1rem;\n    font-weight: 500;\n    margin-bottom: 5px;\n\n    &:last-child {\n      font-weight: 400;\n    }\n  }\n`;\n\nexport { EmployeeContainer, EmployeeTitle, Employee };\n","import * as React from 'react';\nimport { Employee, EmployeeContainer, EmployeeTitle } from './styles';\nimport ServiceBFF from '../../../../services/BFF';\nimport Avatar from '../../../UI/avatar';\n\nconst EmployeeRanking = () => {\n  const [Employees, setEmployeesRanking] = React.useState([]);\n\n  React.useEffect(() => {\n    ServiceBFF.getEmployeesRanking().then((data) => {\n      setEmployeesRanking(data);\n    });\n  }, []);\n\n  return (\n    <EmployeeContainer>\n      <EmployeeTitle>\n        <h3>Employee Ranking</h3>\n        <span>{Employees.length}</span>\n      </EmployeeTitle>\n      {Employees.map((employee) => {\n        return (\n          <Employee>\n            <Avatar responsible={employee} />\n            <h4>{employee.name}</h4>\n            <p>Hours</p>\n            <p>{employee.hours}</p>\n          </Employee>\n        );\n      })}\n    </EmployeeContainer>\n  );\n};\n\nexport default EmployeeRanking;\n","import styled from 'styled-components';\n\nconst DashboardMain = styled.article`\n  width: 100%;\n  height: calc(100% - 100px);\n  overflow-x: hidden;\n`;\n\nconst DashboardContainer = styled.article`\n  width: 100%;\n  display: flex;\n  gap: 20px;\n\n  @media screen and (max-width: 1350px) {\n    flex-direction: column;\n  }\n`;\n\nexport { DashboardMain, DashboardContainer };\n","import * as React from 'react';\nimport Home from '../Home';\nimport Dcharts from './DCharts';\nimport EmployeeRanking from './EmployeeRanking';\nimport { DashboardContainer, DashboardMain } from './styles';\nimport ServicesBff from '../../../services/BFF';\n\nconst Dashboard = () => {\n  // const [project, setProject] = React.useState([]);\n  const [userDashboard, setUserDashboard] = React.useState([]);\n  const [employeesRanking, setEmployeesRanking] = React.useState([]);\n\n  React.useEffect(() => {\n    // ServicesBff.getProject().then((data) => setProject(data));\n    ServicesBff.getUserDashboard().then((data) => setUserDashboard(data));\n    ServicesBff.getEmployeesRanking().then((data) => setEmployeesRanking(data));\n  }, []);\n\n  return (\n    <Home title=\"Dashboard\">\n      <DashboardMain>\n        <DashboardContainer>\n          <EmployeeRanking />\n          <Dcharts />\n        </DashboardContainer>\n      </DashboardMain>\n    </Home>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport Nav from '../components/Home/Nav';\nimport Dashboard from '../components/Home/Dashboard';\n\nconst HomePage = () => <Dashboard />;\n\nexport default HomePage;\n","import Request from './request';\n\nconst getTasks = () => Request('/api/tasks').then((res) => res.data);\n\nconst getTasksByProject = (id) =>\n  Request(`/api/tasks/${id}`).then((res) => res.data);\n\nconst createTask = (data) =>\n  Request('/api/tasks/create', {\n    method: 'POST',\n    data,\n  }).then((response) => response.data);\n\nconst updateTask = (id, data) =>\n  Request(`/api/tasks/update/${id}`, {\n    data,\n    method: 'PUT',\n  }).then((response) => response.data);\n\nconst deleteTask = (id) =>\n  Request(`/api/tasks/delete/${id}`, {\n    method: 'DELETE',\n  }).then((response) => response.data);\n\nexport default {\n  getTasks,\n  getTasksByProject,\n  createTask,\n  updateTask,\n  deleteTask,\n};\n"],"names":["responsible","i","name","translatex","key","src","avatar","alt","AssignImg","styled","props","AvatarStyled","BalanceContainer","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","BarElement","labels","data","datasets","label","map","faker","min","max","borderColor","backgroundColor","className","options","responsive","plugins","legend","position","FirstContainer","FChartsContainer","theme","boxShadoxC","FChartsInfo","FChartsData","color","chartOrange","chartYellow","chartGreen","useTheme","React","userDashboard","setUserDashboard","tasks","setTasks","ArcElement","backgroundColorChart","ServicesBff","then","array","Object","keys","globalStatus","push","ServicesTasks","totalTasks","reduce","acc","task","setTaskStatusName","status","toString","Labels","tasksDataValues","values","dataProjects","dataTasks","ready","inProgress","completed","DChartsContainer","EmployeeContainer","EmployeeTitle","primaryGreen","Employee","boxShadowC","Employees","setEmployeesRanking","ServiceBFF","length","employee","hours","DashboardMain","DashboardContainer","Home","title","getTasks","Request","res","getTasksByProject","id","createTask","method","response","updateTask","deleteTask"],"sourceRoot":""}