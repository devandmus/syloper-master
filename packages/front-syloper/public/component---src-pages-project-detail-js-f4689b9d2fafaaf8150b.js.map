{"version":3,"file":"component---src-pages-project-detail-js-f4689b9d2fafaaf8150b.js","mappings":"sQAEMA,EAAiBC,EAAAA,QAAAA,EAAAA,WAAH,kEAAGA,CAAH,oEC4CpB,EAtCoB,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,mBAAoBC,EAAoB,EAApBA,cACnCC,GAAQC,EAAAA,EAAAA,YAQd,GAAsCC,EAAAA,EAAAA,UAASJ,GAAxCK,EAAP,KAAoBC,EAApB,KAEA,OACE,2BACE,gBAAC,IAAD,KACE,yBACE,gBAAC,MAAD,OAEF,0CAEF,gBAACR,EAAD,KACE,gBAAC,IAAD,CACES,KAAK,cACLC,OAnBa,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAClBA,IAD6C,EAApBC,eAE3BT,EAAc,CAAEU,oBAAqBF,KAkBjCG,SAAUN,EACVG,MAAOJ,EACPQ,MAAO,CACLC,MAAO,OACPC,SAAU,UACVC,WAAY,KACZC,WAAYf,EAAMgB,KAAKC,QAEzBC,QAAM,O,WCrCVC,EAActB,EAAAA,QAAAA,QAAAA,WAAH,+DAAGA,CAAH,kaAyBJ,qBAAGG,MAAkBoB,MAAMC,WAUlCC,EAAazB,EAAAA,QAAAA,QAAAA,WAAH,8DAAGA,CAAH,0FAWV0B,EAAqB1B,EAAAA,QAAAA,IAAAA,WAAH,sEAAGA,CAAH,mRAuBlB2B,EAAe3B,EAAAA,QAAAA,IAAAA,WAAH,gEAAGA,CAAH,yS,GCrEDA,EAAAA,QAAAA,IAAAA,WAAH,2DAAGA,CAAH,oNAIU,qBAAEG,MAAiBoB,MAAMK,W,UCwCjD,EArCgB,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,eAAgB3B,EAAoB,EAApBA,cAC3BC,GAAQC,EAAAA,EAAAA,YACd,GAA8BC,EAAAA,EAAAA,UAASwB,GAAhCC,EAAP,KAAgBC,EAAhB,KAMA,OACE,2BACE,gBAACJ,EAAD,KACE,yBACE,gBAAC,MAAD,OAEF,uCAEF,gBAAC,IAAD,CACElB,OAde,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAClBA,IAD6C,EAApBC,eAE3BT,EAAc,CAAE8B,iBAAkBtB,KAahCG,SAAUkB,EACVE,KAAK,OACLvB,MAAOoB,EACPI,kBAAmBC,EAAAA,EACnBrB,MAAO,CACLC,MAAO,QACPqB,QAAS,OACTC,UAAW,aACXC,gBAAiBnC,EAAMoB,MAAMK,QAC7BW,UAAW,SACXvB,SAAU,OACVwB,aAAc,MACdC,aAAc,Y,UCrClBC,EAAmB1C,EAAAA,QAAAA,IAAAA,WAAH,oEAAGA,CAAH,wH,GAWEA,EAAAA,QAAAA,KAAAA,WAAH,mEAAGA,CAAH,2VAIN,kCAAG2C,WAAH,SACX,gBAAGC,EAAH,EAAGA,IAAH,OAAaA,GAAG,yBAA6BA,EAA7B,OAUI,qBAAGzC,MAAkBoB,MAAMsB,c,SCInD,EA1BqB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAKtB,OACE,2BACE,gBAACnB,EAAD,KACE,yBACE,gBAAC,MAAD,OAEF,2CAEF,gBAACe,EAAD,KACGI,EAAaC,KAAI,SAACC,EAAMC,GAAP,OAChB,gBAAC,IAAD,CACEC,IAAKF,EAAKG,MACVC,YAAaJ,EACbL,YAjBaU,EAiBaJ,EAhB5B,IAAa,EAARI,EAAY,MADH,IAACA,Q,WCLnBC,EAAkBtD,EAAAA,QAAAA,IAAAA,WAAH,kEAAGA,CAAH,gBAIfuD,EAAavD,EAAAA,QAAAA,IAAAA,WAAH,6DAAGA,CAAH,wKAaVwD,EAAYxD,EAAAA,QAAAA,EAAAA,WAAH,4DAAGA,CAAH,uBAITyD,EAAczD,EAAAA,QAAAA,IAAAA,WAAH,8DAAGA,CAAH,mjBAoBO,qBAAGG,MAAkBoB,MAAMK,WAYpC,qBAAG8B,YAGQ,qBAAGvD,MAAkBoB,MAAMsB,cC/BrD,EArBe,SAAC,GAAD,IAAGc,EAAH,EAAGA,OAAQD,EAAX,EAAWA,SAAX,OACb,gBAACJ,EAAD,KACE,gBAAC3B,EAAD,KACE,yBACE,gBAAC,MAAD,OAEF,qCAEF,gBAAC4B,EAAD,KACE,gBAACC,EAAD,MACA,gBAACI,EAAA,EAAD,CAAcD,OAAQA,IACtB,gBAACF,EAAD,CAAaC,SAAUA,GACrB,uBAAKG,UAAU,iBACb,8BAEF,qBAAGA,UAAU,kBAAkBH,EAA/B,S,sBCkER,EA3EwB,SAACI,GACvB,IAAM3D,GAAQC,EAAAA,EAAAA,YAGZ2D,EAOED,EAPFC,WACAC,EAMEF,EANFE,aACA/D,EAKE6D,EALF7D,mBACAC,EAIE4D,EAJF5D,cACA2B,EAGEiC,EAHFjC,eACAoC,EAEEH,EAFFG,UACAC,EACEJ,EADFI,eAGF,GAAwC7D,EAAAA,EAAAA,UAAS,IAA1C8D,EAAP,KAAqBC,EAArB,KACA,GAA0B/D,EAAAA,EAAAA,UAAS2D,GAA5BK,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,gBAAiCT,GAAYU,MAAK,SAACC,GACjDN,EAAgBM,QAEjB,IAQH,OACE,gCACE,gBAACpD,EAAD,KACE,gBAAC,IAAD,CACEW,KAAK,OACLzB,KAAK,eACLE,MAAO2D,EACPxD,SAAUyD,EACV7D,OAda,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAClBA,IAD6C,EAApBC,eAE3BT,EAAc,CAAEyE,cAAejE,KAa3BI,MAAO,CACLC,MAAO,OACP0B,aAAc,OACdmC,WAAY,IACZ5D,SAAU,SACVC,WAAY,KACZC,WAAYf,EAAMgB,KAAKC,UAG3B,0BAAK+C,EAAaU,qBAEpB,gBAACpD,EAAD,KACE,gBAACC,EAAD,KACE,gBAAC,EAAD,CAAcoB,aAAcoB,EAAepB,eAC3C,gBAAC,EAAD,CACEjB,eAAgBA,EAChB3B,cAAeA,IAEjB,gBAAC,EAAD,CACEyD,OAAQO,EAAeY,eACvBpB,SAAUQ,EAAeR,YAG7B,gBAAC,EAAD,CACEzD,mBAAoBA,EACpBC,cAAeA,IAGjB,gBAAC6E,EAAA,EAAD,CACEd,UAAWA,EACXD,aAAcA,EACdgB,cAAed,EAAeY,oB,sBCIxC,EA1EsB,WACpB,IAAOG,GAAgBC,EAAAA,EAAAA,IAAc,KAAMC,EAAAA,IAA3C,GACA,GAAsC9E,EAAAA,EAAAA,UAAS,IAAxC+E,EAAP,KAAoBC,EAApB,KACA,GAAkChF,EAAAA,EAAAA,WAAS,GAApCiF,EAAP,KAAkBC,EAAlB,KACA,GAA4ClF,EAAAA,EAAAA,UAAS,IAA9C6D,EAAP,KAAuBsB,EAAvB,KAiDA,OAtCAjB,EAAAA,EAAAA,YAAU,WACRkB,EAAAA,EAAAA,WAAuBR,GAAcR,MAAK,SAACC,GACzC,IACEgB,EAWEhB,EAXFgB,YACAhC,EAUEgB,EAVFhB,SACAiC,EASEjB,EATFiB,aACA/E,EAQE8D,EARF9D,oBACAoB,EAOE0C,EAPF1C,iBACA8C,EAMEJ,EANFI,eACAH,EAKED,EALFC,cACAiB,EAIElB,EAJFkB,WACAC,EAGEnB,EAHFmB,MACA/C,EAEE4B,EAFF5B,aACAgD,EACEpB,EADFoB,GAGFT,EAAe,CACbK,YAAAA,EACAf,cAAAA,EACA/D,oBAAAA,EACA+E,aAAAA,EACA3D,iBAAAA,EACA8D,GAAAA,EACAhB,eAAAA,IAGFU,EAAkB,CAChB9B,SAAAA,EACAoB,eAAAA,EACAc,WAAAA,EACAC,MAAAA,EACA/C,aAAAA,IAGFyC,GAAa,QAEd,CAACN,IAGF,gBAACc,EAAA,EAAD,CAAM1B,MAAM,kBACTiB,EACC,yCAEA,gBAACU,EAAA,EAAD,CAAaC,QAASC,EAAAA,IACpB,gBAAC,EAAD,CACEnC,WAAYqB,EAAYM,YACxB1B,aAAcoB,EAAYT,cAC1B1E,mBAAoBmF,EAAYxE,oBAChCuF,YAAaf,EAAYO,aACzB9D,eAAgBuD,EAAYpD,iBAC5BiC,UAAWmB,EAAYU,GACvB5B,eAAgBA,EAChBhE,cA7DY,SAACkG,GACrB,IAAMC,EAAc,iBACfjB,EACAgB,GAGLE,EAAAA,EAAAA,cAA+BrB,EAAcoB,SCjBjD,EAF2B,kBAAM,gBAAC,EAAD,Q,oCCWjC,KACEE,WAbiB,SAACT,GAAD,OACjBU,EAAAA,EAAAA,GAAQ,2BAA2BV,GAAMrB,MAAK,SAACgC,GAAD,OAASA,EAAI/B,SAa3DgC,iBAXuB,kBACvBF,EAAAA,EAAAA,GAAQ,2BAA2B/B,MAAK,SAACgC,GAAD,OAASA,EAAI/B,SAWrDiC,oBAT0B,kBAC1BH,EAAAA,EAAAA,GAAQ,oBAAoB/B,MAAK,SAACgC,GAAD,OAASA,EAAI/B,SAS9CkC,aAPmB,kBACnBJ,EAAAA,EAAAA,GAAQ,sBAAsB/B,MAAK,SAACgC,GAAD,OAASA,EAAI/B","sources":["webpack://syloper-front/./src/components/Home/ProjectDetail/DetailContainer/Description/styles/index.js","webpack://syloper-front/./src/components/Home/ProjectDetail/DetailContainer/Description/index.js","webpack://syloper-front/./src/components/Home/ProjectDetail/DetailContainer/styles/index.js","webpack://syloper-front/./src/components/Home/ProjectDetail/DetailContainer/DueDate/styles/index.js","webpack://syloper-front/./src/components/Home/ProjectDetail/DetailContainer/DueDate/index.js","webpack://syloper-front/./src/components/Home/ProjectDetail/DetailContainer/Participants/styles/index.js","webpack://syloper-front/./src/components/Home/ProjectDetail/DetailContainer/Participants/index.js","webpack://syloper-front/./src/components/Home/ProjectDetail/DetailContainer/Status/styles/index.js","webpack://syloper-front/./src/components/Home/ProjectDetail/DetailContainer/Status/index.js","webpack://syloper-front/./src/components/Home/ProjectDetail/DetailContainer/index.js","webpack://syloper-front/./src/components/Home/ProjectDetail/index.js","webpack://syloper-front/./src/pages/project-detail.js","webpack://syloper-front/./src/services/BFF.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst DescriptionTxt = styled.p`\n  width: 100%;\n  font-weight: 300;\n  font-size: 1.08rem;\n  line-height: 1.35;\n`;\n\nexport { DescriptionTxt };\n","import React, { useState } from 'react';\nimport { BsCardText } from 'react-icons/bs';\nimport { EditTextarea } from 'react-edit-text';\nimport { useTheme } from 'styled-components';\nimport { SectionTitle } from '../../../../Common/styles';\nimport { DescriptionTxt } from './styles';\nimport 'react-edit-text/dist/index.css';\n\nconst Description = ({ projectDescription, updateProject }) => {\n  const theme = useTheme();\n\n  const handleOnSave = ({ value, previousValue }) => {\n    if (value !== previousValue) {\n      updateProject({ project_description: value });\n    }\n  };\n\n  const [description, setDescription] = useState(projectDescription);\n\n  return (\n    <div>\n      <SectionTitle>\n        <i>\n          <BsCardText />\n        </i>\n        <h5>Description</h5>\n      </SectionTitle>\n      <DescriptionTxt>\n        <EditTextarea\n          name=\"description\"\n          onSave={handleOnSave}\n          onChange={setDescription}\n          value={description}\n          style={{\n            width: '100%',\n            fontSize: '1.08rem',\n            lineHeight: 1.35,\n            fontFamily: theme.font.family,\n          }}\n          inline\n        />\n      </DescriptionTxt>\n    </div>\n  );\n};\n\nexport default Description;\n","import styled from 'styled-components';\n\nconst DetailTitle = styled.section`\n  width: 100%;\n  margin-bottom: 25px;\n  align-items: baseline;\n\n  @media only screen and (max-width: 768px) {\n    flex-direction: column;\n    text-align: center;\n    margin-bottom: 25px;\n  }\n\n  h3 {\n    font-size: 1.8rem;\n    margin-right: 12px;\n    font-weight: 600;\n\n    @media only screen and (max-width: 768px) {\n      width: 100%;\n      margin-bottom: 4px;\n      font-size: 1.6rem;\n    }\n  }\n\n  h4 {\n    font-size: 1.5rem;\n    color: ${({ theme }) => theme.color.gray500};\n    font-weight: 500;\n\n    @media only screen and (max-width: 768px) {\n      width: 100%;\n      font-size: 1.5rem;\n    }\n  }\n`;\n\nconst DetailMain = styled.section`\n  width: 100%;\n  height: calc(100% - 160px);\n\n  > div {\n    &:nth-child(-n + 2) {\n      margin-bottom: 40px;\n    }\n  }\n`;\n\nconst FirstInfoContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n\n  > div {\n    @media only screen and (max-width: 1150px) {\n      &:nth-last-child(-n + 1) {\n        flex-basis: 100%;\n      }\n    }\n\n    @media only screen and (max-width: 768px) {\n      flex-basis: 100%;\n      margin-bottom: 40px;\n\n      &:nth-last-child(-n + 1) {\n        margin-bottom: 0;\n      }\n    }\n  }\n`;\n\nconst SectionTitle = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  margin-bottom: 12px;\n\n  &.task-title {\n    justify-content: space-between;\n\n    h5 {\n      display: inline-block;\n    }\n\n    button {\n      width: 200px;\n      font-size: 1.17rem;\n    }\n  }\n\n  @media only screen and (max-width: 768px) {\n    justify-content: center;\n  }\n\n  i {\n    margin-right: 5px;\n  }\n\n  h5 {\n    font-size: 1.2rem;\n    font-weight: 600;\n  }\n`;\n\nexport { DetailTitle, DetailMain, SectionTitle, FirstInfoContainer };\n","import styled from 'styled-components';\n\nconst DateInfo = styled.div `\n    width: 200px;\n    padding: 10px;\n    box-sizing: border-box;\n    background-color: ${({theme}) => theme.color.gray200};\n    text-align: center;\n    font-size: 1rem;\n    border-radius: 5px;\n    margin-bottom: 25px;\n\n    @media only screen and (max-width: 768px){\n        width: 300px;\n        margin: 0 auto;\n    }\n`;\n\nexport {\n    DateInfo\n}","import React, { useState } from 'react';\nimport { MdDateRange } from 'react-icons/md';\nimport { EditText } from 'react-edit-text';\nimport { useTheme } from 'styled-components';\nimport { SectionTitle } from '../styles';\nimport { DateInfo } from './styles';\nimport { dateFormatter } from '../../../../../utils/date';\nimport 'react-edit-text/dist/index.css';\n\nconst DueDate = ({ projectDueDate, updateProject }) => {\n  const theme = useTheme();\n  const [dueDate, setDueDate] = useState(projectDueDate);\n  const handleOnSave = ({ value, previousValue }) => {\n    if (value !== previousValue) {\n      updateProject({ project_due_date: value });\n    }\n  };\n  return (\n    <div>\n      <SectionTitle>\n        <i>\n          <MdDateRange />\n        </i>\n        <h5>Due Date</h5>\n      </SectionTitle>\n      <EditText\n        onSave={handleOnSave}\n        onChange={setDueDate}\n        type=\"date\"\n        value={dueDate}\n        formatDisplayText={dateFormatter}\n        style={{\n          width: '200px',\n          padding: '10px',\n          boxSizing: 'border-box',\n          backgroundColor: theme.color.gray200,\n          textAlign: 'center',\n          fontSize: '1rem',\n          borderRadius: '5px',\n          marginBottom: '25px',\n        }}\n      />\n    </div>\n  );\n};\n\nexport default DueDate;\n","import styled from 'styled-components';\n\nconst ParticipantsList = styled.div`\n  width: 100%;\n\n  @media only screen and (max-width: 768px) {\n    width: auto;\n    display: flex;\n    margin: 0 auto;\n    justify-content: center;\n  }\n`;\n\nconst ParticipantsImg = styled.span`\n  width: 45px;\n  height: 45px;\n  display: inline-block;\n  transform: ${({ translatex }) => `translateX(${translatex}px)`};\n  ${({ src }) => src && `background-image: url(${src})`};\n  background-size: cover;\n  border: 1px solid #fff;\n  border-radius: 50%;\n\n  @media only screen and (max-width: 768px) {\n    transform: translateX(0px);\n  }\n\n  &:last-child {\n    background-color: ${({ theme }) => theme.color.lightGreen};\n    position: relative;\n\n    i {\n      position: absolute;\n      left: 0;\n      right: 0;\n      margin: 0 auto;\n      top: 50%;\n      width: 15px;\n      transform: translateY(-50%);\n    }\n  }\n`;\n\nexport {\n  ParticipantsList,\n  ParticipantsImg\n}\n","import React from 'react';\nimport { FiUsers } from 'react-icons/fi';\nimport { SectionTitle } from '../styles';\nimport { ParticipantsList, ParticipantsImg } from './styles';\nimport Avatar from '../../../../UI/avatar';\n\nconst Participants = ({ responsibles }) => {\n  const calcTranslate = (index) => {\n    return `-${index * 2 * 10}`;\n  };\n\n  return (\n    <div>\n      <SectionTitle>\n        <i>\n          <FiUsers />\n        </i>\n        <h5>Participants</h5>\n      </SectionTitle>\n      <ParticipantsList>\n        {responsibles.map((user, i) => (\n          <Avatar\n            key={user.email}\n            responsible={user}\n            translatex={calcTranslate(i)}\n          />\n        ))}\n      </ParticipantsList>\n    </div>\n  );\n};\n\nexport default Participants;\n","import styled from 'styled-components';\n\nconst StatusContainer = styled.div`\n  width: 45%;\n`;\n\nconst StatusMain = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  @media only screen and (max-width: 768px) {\n    width: 100%;\n    flex-direction: column;\n    margin: 0 auto;\n  }\n`;\n\nconst StatusTxt = styled.p`\n  font-size: 1.1rem;\n`;\n\nconst ProgressBar = styled.div`\n  width: 70%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  @media only screen and (max-width: 1150px) and (min-width: 768px) {\n    width: 85%;\n  }\n\n  @media only screen and (max-width: 768px) {\n    flex-direction: column;\n    width: 100%;\n    margin-top: 6px;\n  }\n\n  .bar-container {\n    width: 87%;\n    height: 5px;\n    border-radius: 10px;\n    background-color: ${({ theme }) => theme.color.gray200};\n\n    @media only screen and (max-width: 1150px) {\n      width: 90%;\n    }\n\n    @media only screen and (max-width: 768px) {\n      margin-bottom: 6px;\n    }\n\n    span {\n      display: block;\n      width: ${({ progress }) => progress}%;\n      height: 5px;\n      border-radius: 10px;\n      background-color: ${({ theme }) => theme.color.lightGreen};\n    }\n  }\n\n  .progress-value {\n    font-size: 1rem;\n    font-weight: 600;\n  }\n`;\n\nexport {\n  StatusContainer,\n  StatusMain,\n  StatusTxt,\n  ProgressBar\n}\n","import React from 'react';\nimport { MdAutoGraph } from 'react-icons/md';\nimport StatusButton from '../../../../UI/StatusButton';\nimport { SectionTitle } from '../styles';\nimport { ProgressBar, StatusContainer, StatusMain, StatusTxt } from './styles';\n\nconst Status = ({ status, progress }) => (\n  <StatusContainer>\n    <SectionTitle>\n      <i>\n        <MdAutoGraph />\n      </i>\n      <h5>Status</h5>\n    </SectionTitle>\n    <StatusMain>\n      <StatusTxt />\n      <StatusButton status={status} />\n      <ProgressBar progress={progress}>\n        <div className=\"bar-container\">\n          <span />\n        </div>\n        <p className=\"progress-value\">{progress}%</p>\n      </ProgressBar>\n    </StatusMain>\n  </StatusContainer>\n);\n\nexport default Status;\n","import React, { useState, useEffect } from 'react';\nimport { EditText } from 'react-edit-text';\nimport { useTheme } from 'styled-components';\nimport Description from './Description';\nimport DueDate from './DueDate';\nimport Participants from './Participants';\nimport Status from './Status';\nimport { DetailTitle, DetailMain, FirstInfoContainer } from './styles';\nimport 'react-edit-text/dist/index.css';\nimport ServicesCustomer from '../../../../services/ServicesCustomer';\nimport KanbanBoard from '../../KanbanBoard';\n\nconst DetailContainer = (props) => {\n  const theme = useTheme();\n\n  const {\n    customerId,\n    projectTitle,\n    projectDescription,\n    updateProject,\n    projectDueDate,\n    projectId,\n    projectContext,\n  } = props;\n\n  const [customerData, setCustomerData] = useState({});\n  const [title, setTitle] = useState(projectTitle);\n\n  useEffect(() => {\n    ServicesCustomer.getCustomerById(customerId).then((data) => {\n      setCustomerData(data);\n    });\n  }, []);\n\n  const handleOnSave = ({ value, previousValue }) => {\n    if (value !== previousValue) {\n      updateProject({ project_title: value });\n    }\n  };\n\n  return (\n    <>\n      <DetailTitle>\n        <EditText\n          type=\"text\"\n          name=\"projectTitle\"\n          value={title}\n          onChange={setTitle}\n          onSave={handleOnSave}\n          style={{\n            width: '100%',\n            marginBottom: '10px',\n            fontWeight: 500,\n            fontSize: '1.5rem',\n            lineHeight: 1.35,\n            fontFamily: theme.font.family,\n          }}\n        />\n        <h4>{customerData.customer_full_name}</h4>\n      </DetailTitle>\n      <DetailMain>\n        <FirstInfoContainer>\n          <Participants responsibles={projectContext.responsibles} />\n          <DueDate\n            projectDueDate={projectDueDate}\n            updateProject={updateProject}\n          />\n          <Status\n            status={projectContext.project_status}\n            progress={projectContext.progress}\n          />\n        </FirstInfoContainer>\n        <Description\n          projectDescription={projectDescription}\n          updateProject={updateProject}\n        />\n\n        <KanbanBoard\n          projectId={projectId}\n          projectTitle={projectTitle}\n          projectStatus={projectContext.project_status}\n        />\n      </DetailMain>\n    </>\n  );\n};\n\nexport default DetailContainer;\n","/* eslint-disable camelcase */\nimport React, { useState, useEffect } from 'react';\nimport { useQueryParam, StringParam } from 'use-query-params';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport Home from '../Home';\nimport DetailContainer from './DetailContainer';\nimport ServicesProjects from '../../../services/ServicesProjects';\nimport ServicesBff from '../../../services/BFF';\n\nconst ProjectDetail = () => {\n  const [projectIdUrl] = useQueryParam('id', StringParam);\n  const [projectData, setprojectData] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [projectContext, setProjectContext] = useState({});\n\n  const updateProject = (project) => {\n    const updatedProject = {\n      ...projectData,\n      ...project,\n    };\n\n    ServicesProjects.updateProject(projectIdUrl, updatedProject);\n  };\n\n  useEffect(() => {\n    ServicesBff.getProject(projectIdUrl).then((data) => {\n      const {\n        customer_id,\n        progress,\n        project_date,\n        project_description,\n        project_due_date,\n        project_status,\n        project_title,\n        tasks_left,\n        tasks,\n        responsibles,\n        id,\n      } = data;\n\n      setprojectData({\n        customer_id,\n        project_title,\n        project_description,\n        project_date,\n        project_due_date,\n        id,\n        project_status,\n      });\n\n      setProjectContext({\n        progress,\n        project_status,\n        tasks_left,\n        tasks,\n        responsibles,\n      });\n\n      setIsLoading(false);\n    });\n  }, [projectIdUrl]);\n\n  return (\n    <Home title=\"Project Detail\">\n      {isLoading ? (\n        <div>Loading...</div>\n      ) : (\n        <DndProvider backend={HTML5Backend}>\n          <DetailContainer\n            customerId={projectData.customer_id}\n            projectTitle={projectData.project_title}\n            projectDescription={projectData.project_description}\n            projectDate={projectData.project_date}\n            projectDueDate={projectData.project_due_date}\n            projectId={projectData.id}\n            projectContext={projectContext}\n            updateProject={updateProject}\n          />\n        </DndProvider>\n      )}\n    </Home>\n  );\n};\nexport default ProjectDetail;\n","import React from 'react';\nimport ProjectDetail from '../components/Home/ProjectDetail';\n\nconst ProjectsDetailPage = () => <ProjectDetail />;\n\nexport default ProjectsDetailPage;\n","import Request from './request';\n\nconst getProject = (id) =>\n  Request(`/api/bff/project-detail/${id}`).then((res) => res.data);\n\nconst getUserDashboard = () =>\n  Request(`/api/bff/user-dashboard`).then((res) => res.data);\n\nconst getEmployeesRanking = () =>\n  Request(`/api/bff/ranking`).then((res) => res.data);\n\nconst getPortfolio = () =>\n  Request(`/api/bff/portfolio`).then((res) => res.data);\n\nexport default {\n  getProject,\n  getUserDashboard,\n  getEmployeesRanking,\n  getPortfolio,\n};\n"],"names":["DescriptionTxt","styled","projectDescription","updateProject","theme","useTheme","useState","description","setDescription","name","onSave","value","previousValue","project_description","onChange","style","width","fontSize","lineHeight","fontFamily","font","family","inline","DetailTitle","color","gray500","DetailMain","FirstInfoContainer","SectionTitle","gray200","projectDueDate","dueDate","setDueDate","project_due_date","type","formatDisplayText","dateFormatter","padding","boxSizing","backgroundColor","textAlign","borderRadius","marginBottom","ParticipantsList","translatex","src","lightGreen","responsibles","map","user","i","key","email","responsible","index","StatusContainer","StatusMain","StatusTxt","ProgressBar","progress","status","StatusButton","className","props","customerId","projectTitle","projectId","projectContext","customerData","setCustomerData","title","setTitle","useEffect","ServicesCustomer","then","data","project_title","fontWeight","customer_full_name","project_status","KanbanBoard","projectStatus","projectIdUrl","useQueryParam","StringParam","projectData","setprojectData","isLoading","setIsLoading","setProjectContext","ServicesBff","customer_id","project_date","tasks_left","tasks","id","Home","DndProvider","backend","HTML5Backend","projectDate","project","updatedProject","ServicesProjects","getProject","Request","res","getUserDashboard","getEmployeesRanking","getPortfolio"],"sourceRoot":""}