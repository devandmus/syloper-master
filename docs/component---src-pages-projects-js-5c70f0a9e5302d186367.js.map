{"version":3,"file":"component---src-pages-projects-js-5c70f0a9e5302d186367.js","mappings":"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","sources":["webpack://syloper-front/./src/components/UI/ModalMessageBox/index.js","webpack://syloper-front/./src/components/Home/Projects/ProjectsHeader/styles/index.js","webpack://syloper-front/./src/components/Home/Projects/ProjectsHeader/index.js","webpack://syloper-front/./src/components/Home/Projects/ProjectsList/styles/index.js","webpack://syloper-front/./src/components/Home/Projects/ProjectsList/Project/styles/index.js","webpack://syloper-front/./src/components/Home/Projects/ProjectsList/Project/index.js","webpack://syloper-front/./src/components/Home/Projects/ProjectsList/index.js","webpack://syloper-front/./src/components/Home/Projects/index.js","webpack://syloper-front/./src/pages/projects.js","webpack://syloper-front/./src/services/BFF.js"],"sourcesContent":["import classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { IoCloseSharp } from 'react-icons/io5';\nimport Button from '../Button';\nimport { ModalMessageContainer, ModalForm, Veil } from '../ModalForm/styles';\nimport AppContext from '../../../contexts/App';\n\nconst ModalMessage = ({ title, message, entries }) => {\n  const { setModalMessageIsOpen, modalMessageIsOpen } = useContext(AppContext);\n\n  const handleCloseClick = () => {\n    setModalMessageIsOpen(false);\n  };\n\n  return (\n    <>\n      <ModalMessageContainer\n        className={classNames({ show: modalMessageIsOpen })}\n      >\n        <i onClick={handleCloseClick}>\n          <IoCloseSharp color=\"#000\" size=\"35px\" />\n        </i>\n        <h3>{title}</h3>\n        <ModalForm>\n          <p>{message}</p>\n\n          {entries ? (\n            <>\n              <p> Before remove it, you have to unassign them from</p>\n\n              {entries.map((entry) => (\n                <ol>\n                  <li>{entry}</li>\n                </ol>\n              ))}\n            </>\n          ) : null}\n          <Button type=\"button\" onClick={handleCloseClick}>\n            Close\n          </Button>\n        </ModalForm>\n      </ModalMessageContainer>\n      <Veil className={classNames({ show: modalMessageIsOpen })} />\n    </>\n  );\n};\n\nexport default ModalMessage;\n","import styled from \"styled-components\";\nimport Button from \"../../../../UI/Button\";\n\nconst ProjectsHeaderContainer = styled.section`\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 35px;\n\n    @media only screen and (max-width: 500px){\n        margin-bottom: 15px;\n    }\n\n    ${Button} {\n        width: 180px;\n        font-size: 1.15rem;\n\n        @media only screen and (max-width: 1270px){\n            width: 145px;\n            font-size: 1.12rem;\n        }\n\n        @media only screen and (max-width: 768px){\n            width: 55px;\n            height: 55px;\n            position: absolute;\n            bottom: 80px;\n            right: 15px;\n            z-index: 100;\n            border-radius: 50%;\n            box-shadow: ${({ theme }) => theme.boxShadowB };\n        }\n    }\n`;\n\nconst Count = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 60%;\n\n    @media only screen and (max-width: 1270px){\n        width: 540px;\n    }\n\n    @media only screen and (max-width: 768px){\n        width: 100%;\n    }\n\n    @media only screen and (max-width: 500px){\n        flex-wrap: wrap;\n    }\n`;\n\nconst CountItem = styled.div`\n    @media only screen and (max-width: 500px){\n        width: 120px;\n        margin-bottom: 10px;\n    }\n\n    p{\n        width: 100%;\n\n        &:first-child{\n            font-size: 1.6rem;\n            font-weight: 600;\n            margin-bottom: 3px;\n        }\n\n        &:last-child{\n            font-size: 1.15rem;\n            color: ${({ theme }) => theme.color.gray600 };\n\n            @media only screen and (max-width: 650px){\n                font-size: 1.04rem;\n                letter-spacing: -.5px;\n            }\n        }\n    }\n`;\n\nexport {\n    ProjectsHeaderContainer,\n    Count,\n    CountItem\n}\n\n\n","import React, { useContext, useEffect, useState } from 'react';\nimport { FaPlus } from 'react-icons/fa';\nimport Button from '../../../UI/Button';\nimport { Count, CountItem, ProjectsHeaderContainer } from './styles';\nimport { useViewport } from '../../../../contexts/viewportSize';\nimport AppContext from '../../../../contexts/App';\nimport ServiceBFF from '../../../../services/BFF';\n\nconst ProjectsHeader = () => {\n  const [globalStatus, setGlobalStatus] = useState({});\n  const { width } = useViewport();\n  const breakpoint = 769;\n\n  const { setModalIsOpen } = useContext(AppContext);\n\n  useEffect(() => {\n    ServiceBFF.getUserDashboard().then((data) =>\n      setGlobalStatus(data.globalStatus)\n    );\n  }, []);\n\n  return (\n    <ProjectsHeaderContainer>\n      <Count>\n        <CountItem>\n          <p>{globalStatus.ready_to_start}</p>\n          <p>Ready to Start</p>\n        </CountItem>\n        <CountItem>\n          <p>{globalStatus.in_progress}</p>\n          <p>In Progress</p>\n        </CountItem>\n        <CountItem>\n          <p>{globalStatus.completed}</p>\n          <p>Completed</p>\n        </CountItem>\n        <CountItem>\n          <p>{globalStatus.total_projects}</p>\n          <p>Total Projects</p>\n        </CountItem>\n      </Count>\n      <Button onClick={() => setModalIsOpen(true)}>\n        {width < breakpoint ? <FaPlus color=\"#fff\" size=\"19\" /> : 'Add Project'}\n      </Button>\n    </ProjectsHeaderContainer>\n  );\n};\n\nexport default ProjectsHeader;\n","import styled from 'styled-components';\n\nconst ProjectsGrid = styled.section`\n  width: 100%;\n  display: grid;\n  grid-template-columns: 32% 32% 32%;\n  justify-content: space-between;\n  row-gap: 2rem;\n  height: calc(100% - 190px);\n  padding-right: 15px;\n  box-sizing: border-box;\n  grid-auto-rows: minmax(320px, 330px);\n\n  @media only screen and (max-width: 1270px) {\n    grid-template-columns: 48% 48%;\n    height: calc(100% - 260px);\n  }\n\n  @media only screen and (max-width: 650px) {\n    grid-template-columns: 100%;\n    padding: 0;\n    height: calc(100% - 214px);\n  }\n`;\n\nexport { ProjectsGrid };\n","import styled from 'styled-components';\n\nconst Footer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst ProjectCard = styled.div`\n  width: 100%;\n  background-color: #fff;\n  border-radius: 15px;\n  padding: 20px;\n  box-sizing: border-box;\n  box-shadow: ${({ theme }) => theme.boxShadow};\n  align-content: space-between;\n  flex-direction: column;\n  position: relative;\n  overflow: hidden;\n`;\n\nconst Title = styled.div`\n  width: 100%;\n  margin-bottom: 30px;\n  h4 {\n    font-size: 1.12rem;\n    margin-bottom: 7px;\n    font-weight: 600;\n  }\n\n  p {\n    font-size: 1.1rem;\n    color: ${({ theme }) => theme.color.gray500};\n    font-weight: 500;\n  }\n`;\n\nconst DueDate = styled.div`\n  width: 80%;\n  padding: 10px;\n  box-sizing: border-box;\n  background-color: ${({ theme }) => theme.color.gray100};\n  text-align: center;\n  font-size: 1rem;\n  border-radius: 5px;\n  margin-bottom: 25px;\n\n  @media only screen and (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst Progress = styled.div`\n  width: 100%;\n  margin-bottom: 20px;\n\n  .bar-container {\n    width: 100%;\n    height: 5px;\n    border-radius: 10px;\n    background-color: ${({ theme }) => theme.color.gray200};\n    margin-bottom: 8px;\n\n    span {\n      display: block;\n      width: ${({ progress }) => progress}%;\n      height: 5px;\n      border-radius: 10px;\n      background-color: ${({ theme }) => theme.color.lightGreen};\n    }\n  }\n\n  .info-container {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n\n    p {\n      font-size: 1rem;\n      font-weight: 600;\n    }\n  }\n`;\n\nconst TasksTxt = styled.p`\n  color: orange;\n  font-size: 1rem;\n  margin-bottom: 20px;\n`;\n\nconst Users = styled.div``;\n\nconst UserImg = styled.span`\n  width: 45px;\n  height: 45px;\n  display: inline-block;\n  transform: ${(props) => `translateX(${props.translatex}px)`};\n  background-color: gray;\n  border: 1px solid #fff;\n  border-radius: 50%;\n`;\n\nexport {\n  ProjectCard,\n  Title,\n  DueDate,\n  Progress,\n  TasksTxt,\n  Users,\n  UserImg,\n  Footer,\n};\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'gatsby';\nimport {\n  DueDate,\n  Progress,\n  ProjectCard,\n  TasksTxt,\n  Title,\n  Users,\n  UserImg,\n  Footer,\n} from './styles';\nimport { dateFormatter } from '../../../../../utils/date';\nimport BurgerIcon from '../../../../UI/BurgerMenu/Icon';\nimport BurgerMenu from '../../../../UI/BurgerMenu/Menu';\nimport ServicesCustomer from '../../../../../services/ServicesCustomer';\nimport ServicesBff from '../../../../../services/BFF';\nimport StatusButton from '../../../../UI/StatusButton';\nimport Avatar from '../../../../UI/avatar';\n\nconst Project = ({\n  customerId,\n  statusName,\n  dueDate,\n  id,\n  title,\n  deleteProject,\n}) => {\n  const [customerData, setCustomerData] = useState({});\n\n  const [projectContext, setprojectContext] = useState({});\n  useEffect(() => {\n    ServicesCustomer.getCustomerById(customerId).then((data) => {\n      setCustomerData(data);\n    });\n    ServicesBff.getProject(id).then((data) => {\n      setprojectContext(data);\n    });\n  }, []);\n\n  const calcTranslate = (index) => `-${index * 2 * 10}`;\n\n  const [isOpenMenu, setIsOpenMenu] = useState(false);\n\n  const handleClickMenu = () => {\n    setIsOpenMenu(!isOpenMenu);\n  };\n\n  return (\n    <ProjectCard key={id}>\n      <BurgerIcon\n        handleClickMenu={handleClickMenu}\n        setIsOpenMenu={setIsOpenMenu}\n      />\n      <Link to={`/project-detail/?id=${id}`}>\n        <Title>\n          <h4>{title}</h4>\n          <p>Customer: {customerData.customer_full_name}</p>\n        </Title>\n        <DueDate>Due Date: {dateFormatter(dueDate)}</DueDate>\n        <Progress progress={projectContext.progress || 0}>\n          <div className=\"bar-container\">\n            <span />\n          </div>\n          <div className=\"info-container\">\n            <p>{statusName}</p>\n            <p>{projectContext.progress}%</p>\n          </div>\n        </Progress>\n        <Footer>\n          <TasksTxt>{projectContext.tasks_left || 0} Tasks left</TasksTxt>\n          <StatusButton\n            status={projectContext.project_status || 'Ready to Start'}\n          />\n          <Users>\n            {projectContext.responsibles &&\n              projectContext.responsibles.map((responsible, i) => (\n                <Avatar\n                  key={i}\n                  translatex={calcTranslate(i)}\n                  responsible={responsible}\n                  name={false}\n                />\n              ))}\n          </Users>\n        </Footer>\n      </Link>\n      <BurgerMenu\n        handleClickMenu={handleClickMenu}\n        deleteCard={() => deleteProject(id)}\n        isOpenMenu={isOpenMenu}\n      />\n    </ProjectCard>\n  );\n};\n\nexport default Project;\n","import React from 'react';\nimport { ProjectsGrid } from './styles';\nimport Project from './Project';\n\nconst ProjectsList = ({ isLoading, projectsData, deleteProject }) => {\n  return (\n    <ProjectsGrid>\n      {isLoading ? (\n        <div>Loading...</div>\n      ) : (\n        <>\n          {projectsData.map((project) => (\n            <Project\n              status={project.contextStatus}\n              customerId={project.customer_id}\n              title={project.project_title}\n              description={project.project_description}\n              responsableId={project.project_responsable}\n              dueDate={project.project_due_date}\n              id={project.id}\n              responsibles={project.responsibles}\n              taskLeft={project.taskLeft}\n              deleteProject={() => deleteProject(project.id)}\n            />\n          ))}\n        </>\n      )}\n    </ProjectsGrid>\n  );\n};\n\nexport default ProjectsList;\n","import React, { useContext, useState, useEffect } from 'react';\nimport ModalForm from '../../UI/ModalForm';\nimport Home from '../Home';\nimport ProjectsHeader from './ProjectsHeader';\nimport ProjectsList from './ProjectsList';\nimport ServicesProjects from '../../../services/ServicesProjects';\nimport AppContext from '../../../contexts/App';\nimport ModalMessage from '../../UI/ModalMessageBox';\n\nconst Projects = () => {\n  const { setModalIsOpen } = useContext(AppContext);\n  const { setModalMessageIsOpen } = useContext(AppContext);\n  const [isLoading, setIsLoading] = useState(true);\n  const [errorMsg, setErrorMsg] = useState('');\n  const [entries, setEntries] = useState([]);\n\n  const [projectsData, setProjectsData] = useState([]);\n\n  useEffect(() => {\n    ServicesProjects.getProjects().then((data) => {\n      setProjectsData(data);\n      setIsLoading(false);\n    });\n  }, []);\n\n  const deleteProject = (id) => {\n    ServicesProjects.deleteProject(id).then((response) => {\n      if (response.status === 200) {\n        setErrorMsg('Successfully removed');\n        setModalMessageIsOpen(true);\n        setProjectsData(projectsData.filter((project) => project.id !== id));\n      } else if (response.status === 423) {\n        setEntries(\n          response.data.dependencies.entries.map((entry) => entry.title)\n        );\n\n        setErrorMsg(\n          `Can't remove it. There are ${response.data.dependencies.bounded} depending on it.`\n        );\n        setModalMessageIsOpen(true);\n      }\n    });\n  };\n\n  const modalOnSubmit = (project) => {\n    const updatedProject = {\n      project_date: Date.now(),\n      project_due_date: project.dueDate,\n      project_title: project.title,\n      project_description: project.description,\n      customer_id: project.customerId,\n      project_responsable: project.responsibleId,\n    };\n\n    ServicesProjects.createProject(updatedProject).then(() => {\n      const withNewProject = [];\n\n      withNewProject.push(...projectsData, updatedProject);\n      setProjectsData(withNewProject);\n      setModalIsOpen(false);\n    });\n  };\n\n  return (\n    <Home title=\"Projects\">\n      <ProjectsHeader />\n      <p>{errorMsg}</p>\n      <ProjectsList\n        isLoading={isLoading}\n        projectsData={projectsData}\n        deleteProject={deleteProject}\n      />\n      <ModalMessage title=\"Message\" message={errorMsg} entries={entries} />\n      <ModalForm\n        title=\"New Project\"\n        description=\"Add project details\"\n        section=\"Project\"\n        modalOnSubmit={modalOnSubmit}\n      />\n    </Home>\n  );\n};\n\nexport default Projects;\n","import React from 'react';\nimport Projects from '../components/Home/Projects';\n\nconst ProjectsPage = () => <Projects />;\n\nexport default ProjectsPage;\n","import Request from './request';\n\nconst getProject = (id) =>\n  Request(`/api/bff/project-detail/${id}`).then((res) => res.data);\n\nconst getUserDashboard = () =>\n  Request(`/api/bff/user-dashboard`).then((res) => res.data);\n\nconst getEmployeesRanking = () =>\n  Request(`/api/bff/ranking`).then((res) => res.data);\n\nconst getPortfolio = () =>\n  Request(`/api/bff/portfolio`).then((res) => res.data);\n\nexport default {\n  getProject,\n  getUserDashboard,\n  getEmployeesRanking,\n  getPortfolio,\n};\n"],"names":["title","message","entries","useContext","AppContext","setModalMessageIsOpen","modalMessageIsOpen","handleCloseClick","className","classNames","show","onClick","color","size","map","entry","type","ProjectsHeaderContainer","styled","Button","theme","boxShadowB","Count","CountItem","gray600","useState","globalStatus","setGlobalStatus","width","useViewport","setModalIsOpen","useEffect","ServiceBFF","then","data","ready_to_start","in_progress","completed","total_projects","ProjectsGrid","Footer","ProjectCard","boxShadow","Title","gray500","DueDate","gray100","Progress","gray200","progress","lightGreen","TasksTxt","Users","props","translatex","customerId","statusName","dueDate","id","deleteProject","customerData","setCustomerData","projectContext","setprojectContext","ServicesCustomer","ServicesBff","isOpenMenu","setIsOpenMenu","handleClickMenu","key","to","customer_full_name","dateFormatter","tasks_left","StatusButton","status","project_status","responsibles","responsible","i","index","name","deleteCard","isLoading","projectsData","project","contextStatus","customer_id","project_title","description","project_description","responsableId","project_responsable","project_due_date","taskLeft","setIsLoading","errorMsg","setErrorMsg","setEntries","setProjectsData","ServicesProjects","Home","response","filter","dependencies","bounded","ModalForm","section","modalOnSubmit","updatedProject","project_date","Date","now","responsibleId","withNewProject","push","getProject","Request","res","getUserDashboard","getEmployeesRanking","getPortfolio"],"sourceRoot":""}